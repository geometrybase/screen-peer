!function(){"use strict";function e(e,t,n,o,i,s){function r(o,i,s){e.call(this),this.options=n.extend({serialization:"json",type:"sync",reliable:!1},s),this._lostMessages=[],this.idPrefix="dc_",this.open=!1,this.destroyed=!1,this.type=this.options.type,this.peer=o,this.options._payload?this.originator=!1:this.originator=!0,this.provider=i,this.id=this.options.connectionId||this.idPrefix+n.randomToken(),this.label=this.options.label||this.id,this.metadata=this.options.metadata,this.serialization=this.options.serialization,this.reliable=this.options.reliable,this.timeouts={},this.callbacks={},this._buffer=[],this._buffering=!1,this.bufferSize=0,this._chunkedData={},this.options._payload&&(this._peerBrowser=this.options._payload.browser),t.startConnection(this,this.options._payload||{originator:!0})}var a=s("DataConnection");return n.inherits(r,e),r.prototype.initialize=function(e){this._dc=this.dataChannel=e,this._configureDataChannel()},r.prototype._configureDataChannel=function(){a.debug("Config data channel",this._dc);var e=this;n.supports.sctp&&(this._dc.binaryType="arraybuffer"),this._dc.onerror=function(e){a.error("data channel error",e)},this._dc.onopen=function(){a.debug("Data chnnel connection success"),e.open=!0,e.sendLostMessage(),e.emit("open")},this._dc.onmessage=function(t){e._handleDataMessage(t)},this._dc.onbufferedamountlow=function(){a.warn("onbufferedamountlow")},this._dc.onclose=function(n){a.debug("DataChannel closed for:",e.peer),!e.destroyed&&e.originator&&t.startConnection(e,{originator:!0})}},r.prototype._handleDataMessage=function(e){var t=e.data;if(t.constructor,"json"===this.serialization&&angular.isString(t)){Date.now();try{t=angular.fromJson(t)}catch(e){}}if(t.__peerData){var n=t.__peerData,i=this._chunkedData[n]||{data:[],count:0,timeStamp:Date.now(),total:t.total};return i.data[t.n]=t.data,i.count+=1,void(i.total===i.count?(delete this._chunkedData[n],"json"===this.serialization&&(t=i.data.join("")),this._handleDataMessage({data:t})):this._chunkedData[n]=i)}"RESPONSE"===t.type&&this.callbacks[t.id]?(o.cancel(this.timeouts[t.id]),this.callbacks[t.id](null,t.payload),delete this.callbacks[t.id]):"DATA"===t.type?this.provider.emit("data",{peer:this.peer,payload:t.payload}):"REQUEST"===t.type&&this.provider.emit("action",{peer:this.peer,payload:t.payload,id:t.id})},r.prototype.disconnect=function(){this.open&&(this.open=!1,t.cleanup(this),this.emit("disconnect"))},r.prototype.destroy=function(){this.destroyed=!0,this.removeAllListeners(),this.disconnect()},r.prototype.sendRequest=function(e,t,n){a.debug("DataConnection.sendRequest(data,timeout,callback) called.");var s=this,r=i.v4();this.send({type:"REQUEST",payload:e,id:r}),this.callbacks[r]=n,this.timeouts[r]=o(function(){delete s.timeouts[r],delete s.callbacks[r],n("No action response in "+t)},t)},r.prototype.sendResponse=function(e,t){this.send({type:"RESPONSE",payload:t,id:e,peer:this.provider.id})},r.prototype.sendData=function(e){this.send({type:"DATA",payload:e})},r.prototype.sendLostMessage=function(){var e=this;this._lostMessages.forEach(function(t){e.send(t.data,t.chunked)})},r.prototype.send=function(e,t){if(this.destroyed)return this.emit("error",new Error("Connection is destroyed."));if(!this.open)return this._lostMessages.push({data:e,chunked:t});var o=this;if("json"===this.serialization){angular.isString(e)||Date.now(),e=angular.toJson(e);var i=n.chunkedBrowsers[this._peerBrowser]||n.chunkedBrowsers[n.brower];i&&!t&&e.length>n.chunkedMTU?this._sendChunks(e):this._bufferedSend(e)}else o._bufferedSend(ab)},r.prototype._bufferedSend=function(e){(this._buffering||!this._trySend(e))&&(this._buffer.push(e),this.bufferSize=this._buffer.length)},r.prototype._trySend=function(e){try{this._dc.send(e)}catch(t){a.debug(t),this._buffering=!0;var n=this;return o(function(){n._buffering=!1,n._tryBuffer()},10),!1}},r.prototype._tryBuffer=function(){if(0!==this._buffer.length){var e=this._buffer[0];this._trySend(e)&&(this._buffer.shift(),this.bufferSize=this._buffer.length,this._tryBuffer())}},r.prototype._sendChunks=function(e){var t=this,o=n.chunkString(e);a.debug("chunks length",o.length),o.forEach(function(e){t.send(e,!0)})},r.prototype.handleMessage=function(e){var n=e.payload;switch(e.type){case"ANSWER":a.debug("handle ANSWER for",e.src,"sdp",n.sdp),this._peerBrowser=n.browser,t.handleSDP(e.type,this,n.sdp);break;case"CANDIDATE":a.debug("handle CANDIDATE for",e.src),t.handleCandidate(this,n.candidate);break;default:a.warn("Unrecogized message type:",e.type,"from peer:",this.peer)}},r}angular.module("screenPeer").factory("DataConnection",e)}(),function(){"use strict";function e(e,t,n,o,i,s){function r(o,i,s){e.call(this),this.options=n.extend({serialization:"json",type:"sync",reliable:!1},s),this._lostMessages=[],this.idPrefix="dc_",this.open=!1,this.destroyed=!1,this.type=this.options.type,this.peer=o,this.options._payload?this.originator=!1:this.originator=!0,this.provider=i,this.id=this.options.connectionId||this.idPrefix+n.randomToken(),this.label=this.options.label||this.id,this.metadata=this.options.metadata,this.serialization=this.options.serialization,this.reliable=this.options.reliable,this.timeouts={},this.callbacks={},this._buffer=[],this._buffering=!1,this.bufferSize=0,this._chunkedData={},this.options._payload&&(this._peerBrowser=this.options._payload.browser),t.startConnection(this,this.options._payload||{originator:!0})}var a=s("DataConnection");return n.inherits(r,e),r.prototype.initialize=function(e){this._dc=this.dataChannel=e,this._configureDataChannel()},r.prototype._configureDataChannel=function(){a.debug("Config data channel",this._dc);var e=this;n.supports.sctp&&(this._dc.binaryType="arraybuffer"),this._dc.onerror=function(e){a.error("data channel error",e)},this._dc.onopen=function(){a.debug("Data chnnel connection success"),e.open=!0,e.sendLostMessage(),e.emit("open")},this._dc.onmessage=function(t){e._handleDataMessage(t)},this._dc.onbufferedamountlow=function(){a.warn("onbufferedamountlow")},this._dc.onclose=function(n){a.debug("DataChannel closed for:",e.peer),!e.destroyed&&e.originator&&t.startConnection(e,{originator:!0})}},r.prototype._handleDataMessage=function(e){var t=e.data;t.constructor;if("json"===this.serialization&&angular.isString(t)){Date.now();try{t=angular.fromJson(t)}catch(e){}}if(t.__peerData){var n=t.__peerData,i=this._chunkedData[n]||{data:[],count:0,timeStamp:Date.now(),total:t.total};return i.data[t.n]=t.data,i.count+=1,void(i.total===i.count?(delete this._chunkedData[n],"json"===this.serialization&&(t=i.data.join("")),this._handleDataMessage({data:t})):this._chunkedData[n]=i)}"RESPONSE"===t.type&&this.callbacks[t.id]?(o.cancel(this.timeouts[t.id]),this.callbacks[t.id](null,t.payload),delete this.callbacks[t.id]):"DATA"===t.type?this.provider.emit("data",{peer:this.peer,payload:t.payload}):"REQUEST"===t.type&&this.provider.emit("action",{peer:this.peer,payload:t.payload,id:t.id})},r.prototype.disconnect=function(){this.open&&(this.open=!1,t.cleanup(this),this.emit("disconnect"))},r.prototype.destroy=function(){this.destroyed=!0,this.removeAllListeners(),this.disconnect()},r.prototype.sendRequest=function(e,t,n){a.debug("DataConnection.sendRequest(data,timeout,callback) called.");var s=this,r=i.v4();this.send({type:"REQUEST",payload:e,id:r}),this.callbacks[r]=n,this.timeouts[r]=o(function(){delete s.timeouts[r],delete s.callbacks[r],n("No action response in "+t)},t)},r.prototype.sendResponse=function(e,t){this.send({type:"RESPONSE",payload:t,id:e,peer:this.provider.id})},r.prototype.sendData=function(e){this.send({type:"DATA",payload:e})},r.prototype.sendLostMessage=function(){var e=this;this._lostMessages.forEach(function(t){e.send(t.data,t.chunked)})},r.prototype.send=function(e,t){if(this.destroyed)return this.emit("error",new Error("Connection is destroyed."));if(!this.open)return this._lostMessages.push({data:e,chunked:t});var o=this;if("json"===this.serialization){if(!angular.isString(e)){Date.now()}e=angular.toJson(e);var i=n.chunkedBrowsers[this._peerBrowser]||n.chunkedBrowsers[n.brower];i&&!t&&e.length>n.chunkedMTU?this._sendChunks(e):this._bufferedSend(e)}else o._bufferedSend(ab)},r.prototype._bufferedSend=function(e){(this._buffering||!this._trySend(e))&&(this._buffer.push(e),this.bufferSize=this._buffer.length)},r.prototype._trySend=function(e){try{this._dc.send(e)}catch(t){a.debug(t),this._buffering=!0;var n=this;return o(function(){n._buffering=!1,n._tryBuffer()},10),!1}},r.prototype._tryBuffer=function(){if(0!==this._buffer.length){var e=this._buffer[0];this._trySend(e)&&(this._buffer.shift(),this.bufferSize=this._buffer.length,this._tryBuffer())}},r.prototype._sendChunks=function(e){var t=this,o=n.chunkString(e);a.debug("chunks length",o.length),o.forEach(function(e){t.send(e,!0)})},r.prototype.handleMessage=function(e){var n=e.payload;switch(e.type){case"ANSWER":a.debug("handle ANSWER for",e.src,"sdp",n.sdp),this._peerBrowser=n.browser,t.handleSDP(e.type,this,n.sdp);break;case"CANDIDATE":a.debug("handle CANDIDATE for",e.src),t.handleCandidate(this,n.candidate);break;default:a.warn("Unrecogized message type:",e.type,"from peer:",this.peer)}},r}angular.module("screenPeer").factory("DataConnection",e)}(),!function(){"use strict";function e(e){return e.uuid}function t(e){return e.d3}function n(e){return e.RTCSessionDescription||e.mozRTCSessionDescription}function o(e){return e.RTCPeerConnection||e.mozRTCPeerConnection||e.webkitRTCPeerConnection}function i(e){return e.RTCIceCandidate||e.mozRTCIceCandidate}function s(e){return e.io}function r(e){return e._}function a(e){return e.EventEmitter}angular.module("screenPeer").factory("RTCSessionDescription",n).factory("RTCPeerConnection",o).factory("RTCIceCandidate",i).factory("io",s).factory("_",r).factory("EventEmitter",a).factory("d3",t).factory("uuid",e)}(),function(){"use strict";function e(e){return e.uuid}function t(e){return e.d3}function n(e){return e.RTCSessionDescription||e.mozRTCSessionDescription}function o(e){return e.RTCPeerConnection||e.mozRTCPeerConnection||e.webkitRTCPeerConnection}function i(e){return e.RTCIceCandidate||e.mozRTCIceCandidate}function s(e){return e.io}function r(e){return e._}function a(e){return e.EventEmitter}angular.module("screenPeer").factory("RTCSessionDescription",n).factory("RTCPeerConnection",o).factory("RTCIceCandidate",i).factory("io",s).factory("_",r).factory("EventEmitter",a).factory("d3",t).factory("uuid",e)}(),!function(){"use strict";angular.module("screenPeer").provider("logging",function(){var e=this;this.logLevel="info",this.setLogLevel=function(e){this.logLevel=e},this.$get=function(t,n){function o(e,t){return function(){var n=[].slice.call(arguments),o=Date.now();t.length<20?t=" ".repeat(20-t.length)+t:t.length>20&&(t="..."+t.substr(t.length-17,17)),o=o.toString().substr(8),n.unshift("background: "+i(t)+"; color: white;font-size:12px;padding:0 10px;line-height:1.2;"),n.unshift("%c"+t+">"),e.apply(null,n)}}var i=n.scale.category20();return function(n){var i=0;switch(e.logLevel){case"debug":i=0;break;case"log":i=1;break;case"info":i=2;break;case"warn":i=3;break;default:i=4}return{debug:0>=i?o(t.debug,n):function(){},log:1>=i?o(t.log,n):function(){},info:2>=i?o(t.info,n):function(){},warn:3>=i?o(t.warn,n):function(){},error:4>=i?o(t.error,n):function(){}}}}})}(),function(){"use strict";angular.module("screenPeer").provider("logging",function(){var e=this;this.logLevel="info",this.setLogLevel=function(e){this.logLevel=e},this.$get=function(t,n){function o(e,t){return function(){var n=[].slice.call(arguments),o=Date.now();t.length<20?t=" ".repeat(20-t.length)+t:t.length>20&&(t="..."+t.substr(t.length-17,17)),o=o.toString().substr(8),n.unshift("background: "+i(t)+"; color: white;font-size:12px;padding:0 10px;line-height:1.2;"),n.unshift("%c"+t+">"),e.apply(null,n)}}var i=n.scale.category20();return function(n){var i=0;switch(e.logLevel){case"debug":i=0;break;case"log":i=1;break;case"info":i=2;break;case"warn":i=3;break;default:i=4}return{debug:0>=i?o(t.debug,n):function(){},log:1>=i?o(t.log,n):function(){},info:2>=i?o(t.info,n):function(){},warn:3>=i?o(t.warn,n):function(){},error:4>=i?o(t.error,n):function(){}}}}})}(),!function(){"use strict";function e(e,t,n,o,i,s){var r=s("Negotiator"),a={pcs:{data:{},media:{},sync:{}},queue:[]};return a._idPrefix="pc_",a.startConnection=function(e,t){var n=a._getPeerConnection(e,t);if(e.pc=e.peerConnection=n,t.originator){var o={ordered:!1};i.supports.sctp||(o={reliable:t.reliable});var s=n.createDataChannel(e.label,o);e.initialize(s)}else a.handleSDP("OFFER",e,t.sdp)},a._getPeerConnection=function(e,t){a.pcs[e.type]||r.error(e.type+" is not a valid connection type. Maybe you overrode the `type` property somewhere."),a.pcs[e.type][e.peer]||(a.pcs[e.type][e.peer]={});var n;return t.pc&&(n=a.pcs[e.type][e.peer][t.pc]),n&&"stable"===n.signalingState||(n=a._startPeerConnection(e)),r.debug(n),n},a._startPeerConnection=function(e){r.debug("Creating RTCPeerConnection");var n=a._idPrefix+i.randomToken(),o={};i.supports.sctp||(o={optional:[{RtpDataChannels:!0}]});var s=new t(e.provider.options.config,o);return a.pcs[e.type][e.peer][n]=s,a._setupListeners(e,s,n),s},a._setupListeners=function(e,t,n){var o=e.peer,s=e.id,c=e.provider;r.debug("Listening for ICE candidates"),t.onicecandidate=function(t){t.candidate&&(r.debug("Receive ICE candidates for:",e.peer),r.debug(t.candidate),r.debug("send to",o),c.socket.emit("message",{type:"CANDIDATE",payload:{candidate:t.candidate,type:e.type,connectionId:e.id},dst:o}))},t.oniceconnectionstatechange=function(){switch(t.iceConnectionState){case"failed":r.debug("iceConnectionState is disconnected, closing connections to "+o),e.emit("error",new Error("Negotiation of connection to "+o+" failed.")),!e.destroyed&&e.originator&&a.startConnection(e,{originator:!0});break;case"disconnected":r.debug("iceConnectionState is disconnected, closing connections to "+o),!e.destroyed&&e.originator&&a.startConnection(e,{originator:!0});break;case"completed":r.debug("oniceconnectionstatechange completed"),t.onicecandidate=i.noop}},t.onicechange=t.oniceconnectionstatechange,r.debug("Listening for `negotiationneeded`"),t.onnegotiationneeded=function(){r.debug("`negotiationneeded` triggered"),"stable"==t.signalingState?a._makeOffer(e):r.debug("onnegotiationneeded triggered when not stable. Is another connection being established?")},r.debug("Listening for data channel"),t.ondatachannel=function(e){r.debug("Receive data channel");var t=e.channel,n=c.getConnection(o,s);n.initialize(t)}},a.cleanup=function(e){r.debug("Cleaning up PeerConnection to "+e.peer);var t=e.pc;!t||"closed"===t.readyState&&"closed"===t.signalingState||(t.close(),e.pc=null)},a._makeOffer=function(e){r.debug("make offer for:",e.peer);var t=e.pc;t.createOffer(function(n){t.setLocalDescription(n,function(){r.debug("Set localDescription: offer","for:",e.peer),e.provider.socket.emit("message",{type:"OFFER",payload:{sdp:n,type:e.type,lable:e.label,connectionId:e.id,reliable:e.reliable,serialization:e.serialization,browser:i.browser},dst:e.peer})},function(t){e.provider.emitError("webrtc",t),r.debug("Failed to setLocalDescription,",t)})},function(t){e.provider.emitError("webrtc",t),r.debug("Failed to createOffer,",t)},e.options.constraints)},a._makeAnswer=function(e){var t=e.pc;t.createAnswer(function(n){r.debug("Created answer."),t.setLocalDescription(n,function(){e.provider.socket.emit("message",{type:"ANSWER",payload:{sdp:n,type:e.type,connectionId:e.id,browser:i.browser},dst:e.peer})},function(t){e.provider.emitError("webrtc",t),r.debug("Failed to setLocalDescription")})},function(t){e.provider.emitError("webrtc",t),r.debug("Failed to create answer,",t)})},a.handleSDP=function(e,t,o){r.debug("SDP",o),o=new n(o);var s=t.pc;r.debug("Setting remote description",o),s.setRemoteDescription(o,function(){r.debug("Set remoteDescription:",e,"for:",t.peer),"OFFER"===e&&a._makeAnswer(t)},function(e){t.provider.emitError("webrtc",e),i.log("Failed to setRemoteDescription,",e)})},a.handleCandidate=function(e,t){var n=t.candidate,i=t.sdpMLineIndex;e.pc.addIceCandidate(new o({sdpMLineIndex:i,candidate:n})),r.debug("Added ICE candidate for:",e.peer)},a}angular.module("screenPeer").factory("Negotiator",e)}(),function(){"use strict";function e(e,t,n,o,i,s){var r=s("Negotiator"),a={pcs:{data:{},media:{},sync:{}},queue:[]};return a._idPrefix="pc_",a.startConnection=function(e,t){var n=a._getPeerConnection(e,t);if(e.pc=e.peerConnection=n,t.originator){var o={ordered:!1};i.supports.sctp||(o={reliable:t.reliable});var s=n.createDataChannel(e.label,o);e.initialize(s)}else a.handleSDP("OFFER",e,t.sdp)},a._getPeerConnection=function(e,t){a.pcs[e.type]||r.error(e.type+" is not a valid connection type. Maybe you overrode the `type` property somewhere."),a.pcs[e.type][e.peer]||(a.pcs[e.type][e.peer]={});var n;return t.pc&&(n=a.pcs[e.type][e.peer][t.pc]),n&&"stable"===n.signalingState||(n=a._startPeerConnection(e)),r.debug(n),n},a._startPeerConnection=function(e){r.debug("Creating RTCPeerConnection");var n=a._idPrefix+i.randomToken(),o={};i.supports.sctp||(o={optional:[{RtpDataChannels:!0}]});var s=new t(e.provider.options.config,o);return a.pcs[e.type][e.peer][n]=s,a._setupListeners(e,s,n),s},a._setupListeners=function(e,t,n){var o=e.peer,s=e.id,c=e.provider;r.debug("Listening for ICE candidates"),t.onicecandidate=function(t){t.candidate&&(r.debug("Receive ICE candidates for:",e.peer),r.debug(t.candidate),r.debug("send to",o),c.socket.emit("message",{type:"CANDIDATE",payload:{candidate:t.candidate,type:e.type,connectionId:e.id},dst:o}))},t.oniceconnectionstatechange=function(){switch(t.iceConnectionState){case"failed":r.debug("iceConnectionState is disconnected, closing connections to "+o),e.emit("error",new Error("Negotiation of connection to "+o+" failed.")),!e.destroyed&&e.originator&&a.startConnection(e,{originator:!0});break;case"disconnected":r.debug("iceConnectionState is disconnected, closing connections to "+o),!e.destroyed&&e.originator&&a.startConnection(e,{originator:!0});break;case"completed":r.debug("oniceconnectionstatechange completed"),t.onicecandidate=i.noop}},t.onicechange=t.oniceconnectionstatechange,r.debug("Listening for `negotiationneeded`"),t.onnegotiationneeded=function(){r.debug("`negotiationneeded` triggered"),"stable"==t.signalingState?a._makeOffer(e):r.debug("onnegotiationneeded triggered when not stable. Is another connection being established?")},r.debug("Listening for data channel"),t.ondatachannel=function(e){r.debug("Receive data channel");var t=e.channel,n=c.getConnection(o,s);n.initialize(t)}},a.cleanup=function(e){r.debug("Cleaning up PeerConnection to "+e.peer);var t=e.pc;!t||"closed"===t.readyState&&"closed"===t.signalingState||(t.close(),e.pc=null)},a._makeOffer=function(e){r.debug("make offer for:",e.peer);var t=e.pc;t.createOffer(function(n){t.setLocalDescription(n,function(){r.debug("Set localDescription: offer","for:",e.peer),e.provider.socket.emit("message",{type:"OFFER",payload:{sdp:n,type:e.type,lable:e.label,connectionId:e.id,reliable:e.reliable,serialization:e.serialization,browser:i.browser},dst:e.peer})},function(t){e.provider.emitError("webrtc",t),r.debug("Failed to setLocalDescription,",t)})},function(t){e.provider.emitError("webrtc",t),r.debug("Failed to createOffer,",t)},e.options.constraints)},a._makeAnswer=function(e){var t=e.pc;t.createAnswer(function(n){r.debug("Created answer."),t.setLocalDescription(n,function(){e.provider.socket.emit("message",{type:"ANSWER",payload:{sdp:n,type:e.type,connectionId:e.id,browser:i.browser},dst:e.peer})},function(t){e.provider.emitError("webrtc",t),r.debug("Failed to setLocalDescription")})},function(t){e.provider.emitError("webrtc",t),r.debug("Failed to create answer,",t)})},a.handleSDP=function(e,t,o){r.debug("SDP",o),o=new n(o);var s=t.pc;r.debug("Setting remote description",o),s.setRemoteDescription(o,function(){r.debug("Set remoteDescription:",e,"for:",t.peer),"OFFER"===e&&a._makeAnswer(t)},function(e){t.provider.emitError("webrtc",e),i.log("Failed to setRemoteDescription,",e)})},a.handleCandidate=function(e,t){var n=t.candidate,i=t.sdpMLineIndex;e.pc.addIceCandidate(new o({sdpMLineIndex:i,candidate:n})),r.debug("Added ICE candidate for:",e.peer)},a}angular.module("screenPeer").factory("Negotiator",e)}(),!function(){"use strict";function e(e,t,n,o,i,s,r,a){function c(e){return d.info(i),this instanceof c?(o.call(this),e=i.extend({config:i.defaultConfig},e),this.options=e,this.destroyed=!1,this.disconnected=!1,this.open=!1,this.connections={all:{}},this._lostMessages={},this.master=!1,i.supports.audioVideo||i.supports.data?void(angular.isString(this.options.organization)&&angular.isString(this.options.exhibition)&&angular.isString(this.options.scene)&&angular.isString(this.options.screen)?this._initializeServerConnection():this._delayedAbort("invalid-options","organization or exhibiton or scene or screen name is not in options")):void this._delayedAbort("browser-incompatiable","The curent browser does not support WebRTC")):new c(e)}var d=a("ScreenPeer");return i.inherits(c,o),c.prototype.syncData=function(e){for(var t in this.connections.sync){var n=this.connections.sync[t];n.sendData(e)}},c.prototype.syncRequest=function(e,t,n){for(var o in this.connections.sync){var i=this.connections.sync[o];i.sendRequest(e,t,n)}},c.prototype.sendResponse=function(e,t,n){var o=this.connections.all[e];o.sendResponse(t,n)},c.prototype.sendData=function(e,t){var n=this.syncConnections[e];n?n.sendData(t):d.error("DataConneciton to",e,"is not exist!")},c.prototype.sendRequest=function(e,t,n,o){var i=this.connections.all[e];i?i.sendRequest(t,n,o):d.error("DataConneciton to",e,"is not exist!")},c.prototype._initializeServerConnection=function(){d.debug("Initialize server connection.");var e=this;this.socket=n(this.options.secure,this.options.host,this.options.port),this.socket.on("connect",function(){e.id=e.socket.id,d.debug("Catch socket `connect` event, emit screen options.",e.options),e.socket.emit("options",{organization:e.options.organization,exhibition:e.options.exhibition,scene:e.options.scene,screen:e.options.screen})}),this.socket.on("message",function(t){e._handleMessage(t)}),this.socket.on("error",function(t){e._abort("socket-error",t)}),this.socket.on("disconnect",function(){d.debug("Catch socket `disconnect` event"),e.emitError("network","Lost connection to server."),e.disconnected||e.disconnect()}),this.socket.on("close",function(){d.debug("Catch socket `close` event"),e.disconnected||e._abort("socket-closed","Underlying socket is already closed")})},c.prototype._updatePeers=function(e){var t=this,n=[];if(e.map(function(e){e._id===t.id&&(t.peerInScene=e),e.scene===t.options.scene&&n.push(e)}),this.peersInScene=n,this.master||n[0]._id!==this.id){if(this.master&&n[0]._id!==this.id){this.master=!1;for(var o in this.connections.all){var i=this.connections.all[o];i.originator&&i.destroy()}this.emit("master",!1)}}else this.master=!0,this.emit("master",!0);this.master&&this._tryConnectPeersInScene()},c.prototype._tryConnectPeersInScene=function(){var e=this;this.peersInScene.forEach(function(t){t._id===e.id||e.connections.all[t._id]||e.connect(t._id,{type:"sync"})})},c.prototype._handleMessage=function(e){var t,n=e.type,o=e.payload,i=e.src;switch(n){case"PEERS":d.debug("Receive message: PEERS in exhibition.",e.payload),this._updatePeers(e.payload),this.emit("open",this.id),this.open=!0;break;case"ERROR":d.error("Recive message: ERROR,",o.msg),this._abort("server-error",o.msg);break;case"SCREEN-TAKEN":d.error("Recive message: SCREEN-TAKEN"),this._abort("screen-exists",'SCREEN "'+this.options.organization+"/"+this.options.exhibition+"/"+this.options.scene+"/"+this.options.screen+'" is exists');break;case"INVALID-KEY":this._abort("invalid-key",'API KEY "'+this.options.key+'" is invalid');break;case"LEAVE":d.debug("Receive leave message from ",i,e),this._cleanupPeer(i);break;case"EXPIRE":this.emitError("peer-unavailable","Could not connect to peer "+i);break;case"OFFER":var r=o.connectionId;d.debug("Receive message: OFFER from",i),t=this.getConnection(i,r),t?d.warn("Offer received for existing Connection ID:",r):(t=new s(i,this,{connectionId:r,_payload:o,metadata:o.metadata,type:o.type,label:o.label,serialization:o.serialization,reliable:o.reliable}),this._addConnection(i,t),this.emit("connection",t));var a=this._getMessages(r);a.forEach(function(e){t.handleMessage(e)});break;default:if(!o)return void d.debug("You receive a malformed message from "+i+" of type "+n);d.debug("Receive message:",n),t=this.getConnection(i),t&&t.pc?t.handleMessage(e):o.connectionId?this._storeMessage(o.connectionId,e):d.warn("You receive an unrecognized message:",e)}},c.prototype._storeMessage=function(e,t){this._lostMessages[e]||(this._lostMessages[e]=[]),this._lostMessages[e].push(t)},c.prototype._getMessages=function(e){var t=this._lostMessages[e];return t?(delete this._lostMessages[e],t):[]},c.prototype.connect=function(e,t){if(this.disconnected)return void d.warn("You cannot connect to a new Peer because you called .disconnect() on this peer.You can create a new peer to reconnect, or call reconnect on this peer if you believe its ID still be available");var n=new s(e,this,t);return this._addConnection(e,n),n},c.prototype._addConnection=function(e,t){this.connections[t.type]||(this.connections[t.type]={}),this.connections.all[e]=t,this.connections[t.type][e]=t},c.prototype.getConnection=function(e){return this.connections.all[e]},c.prototype.emitError=function(e,t){d.error("Error:",t),"string"==typeof t&&(t=new Error(t)),t.type=e,this.emit("error",t)},c.prototype.destroy=function(){this.destroyed||(this.socket.close(),this._cleanup(),this.removeAllListeners(),this.destroyed=!0,this.disconnected=!0,this.open=!1)},c.prototype._delayedAbort=function(e,t){var n=this;r(function(){n._abort(e,t)})},c.prototype._abort=function(e,t){this.disconnect(),this.emitError(e,t)},c.prototype._cleanup=function(){for(var e in this.connections.all){var t=this.connections.all[e];t&&(delete this.connections.all[e],delete this.connections[t.type][e],t.destroy())}this._lostMessages={}},c.prototype.disconnect=function(){d.debug("Disconnect socket connection and close all data connection.");var e=this;r(function(){e.disconnected||(e.disconnected=!0,e.open=!1,e.socket&&e.socket.connected&&(d.debug("Disconnect socket",e.socket),e.socket.disconnect()),e._cleanup(),e.emit("disconnected",e.id),e.id=null)})},c.prototype.reconnect=function(){if(this.disconnected&&!this.destroyed)d.debug("Attempting reconnection to server with ID",this._lastServerId),this.socket.connect();else{if(this.destroyed)throw new Error("This peer cannot reconnect to the server. It has already been destroyed.");if(this.disconnected||this.open)throw new Error("Peer "+this.id+" cannot reconnect because it is not disconnected from ther server");d.error("In a hurry?We're still trying to make initial connection!")}},c.prototype._cleanupPeer=function(e){var t=this.connections.all[e];t?(delete this.connections.all[e],delete this.connections[t.type][e],t.destroy()):d.warn("peer not exist",this.connections)},c}angular.module("screenPeer").service("ScreenPeer",e)}(),function(){"use strict";function e(e,t,n,o,i,s,r,a){function c(e){return d.info(i),this instanceof c?(o.call(this),e=i.extend({config:i.defaultConfig},e),this.options=e,this.destroyed=!1,this.disconnected=!1,this.open=!1,this.connections={all:{}},this._lostMessages={},this.master=!1,i.supports.audioVideo||i.supports.data?void(angular.isString(this.options.organization)&&angular.isString(this.options.exhibition)&&angular.isString(this.options.scene)&&angular.isString(this.options.screen)?this._initializeServerConnection():this._delayedAbort("invalid-options","organization or exhibiton or scene or screen name is not in options")):void this._delayedAbort("browser-incompatiable","The curent browser does not support WebRTC")):new c(e)}var d=a("ScreenPeer");return i.inherits(c,o),c.prototype.syncData=function(e){for(var t in this.connections.sync){var n=this.connections.sync[t];n.sendData(e)}},c.prototype.syncRequest=function(e,t,n){for(var o in this.connections.sync){var i=this.connections.sync[o];i.sendRequest(e,t,n)}},c.prototype.sendResponse=function(e,t,n){var o=this.connections.all[e];o.sendResponse(t,n)},c.prototype.sendData=function(e,t){var n=this.syncConnections[e];n?n.sendData(t):d.error("DataConneciton to",e,"is not exist!")},c.prototype.sendRequest=function(e,t,n,o){var i=this.connections.all[e];i?i.sendRequest(t,n,o):d.error("DataConneciton to",e,"is not exist!")},c.prototype._initializeServerConnection=function(){d.debug("Initialize server connection.");var e=this;this.socket=n(this.options.secure,this.options.host,this.options.port),this.socket.on("connect",function(){e.id=e.socket.id,d.debug("Catch socket `connect` event, emit screen options.",e.options),e.socket.emit("options",{organization:e.options.organization,exhibition:e.options.exhibition,scene:e.options.scene,screen:e.options.screen})}),this.socket.on("message",function(t){e._handleMessage(t)}),this.socket.on("error",function(t){e._abort("socket-error",t)}),this.socket.on("disconnect",function(){d.debug("Catch socket `disconnect` event"),e.emitError("network","Lost connection to server."),e.disconnected||e.disconnect()}),this.socket.on("close",function(){d.debug("Catch socket `close` event"),e.disconnected||e._abort("socket-closed","Underlying socket is already closed")})},c.prototype._updatePeers=function(e){var t=this,n=[];if(e.map(function(e){e._id===t.id&&(t.peerInScene=e),e.scene===t.options.scene&&n.push(e)}),this.peersInScene=n,this.master||n[0]._id!==this.id){if(this.master&&n[0]._id!==this.id){this.master=!1;for(var o in this.connections.all){var i=this.connections.all[o];i.originator&&i.destroy()}this.emit("master",!1)}}else this.master=!0,this.emit("master",!0);this.master&&this._tryConnectPeersInScene()},c.prototype._tryConnectPeersInScene=function(){var e=this;this.peersInScene.forEach(function(t){t._id===e.id||e.connections.all[t._id]||e.connect(t._id,{type:"sync"})})},c.prototype._handleMessage=function(e){var t,n=e.type,o=e.payload,i=e.src;switch(n){case"PEERS":d.debug("Receive message: PEERS in exhibition.",e.payload),this._updatePeers(e.payload),this.emit("open",this.id),this.open=!0;break;case"ERROR":d.error("Recive message: ERROR,",o.msg),this._abort("server-error",o.msg);break;case"SCREEN-TAKEN":d.error("Recive message: SCREEN-TAKEN"),this._abort("screen-exists",'SCREEN "'+this.options.organization+"/"+this.options.exhibition+"/"+this.options.scene+"/"+this.options.screen+'" is exists');break;case"INVALID-KEY":this._abort("invalid-key",'API KEY "'+this.options.key+'" is invalid');break;case"LEAVE":d.debug("Receive leave message from ",i,e),this._cleanupPeer(i);break;case"EXPIRE":this.emitError("peer-unavailable","Could not connect to peer "+i);break;case"OFFER":var r=o.connectionId;d.debug("Receive message: OFFER from",i),t=this.getConnection(i,r),t?d.warn("Offer received for existing Connection ID:",r):(t=new s(i,this,{connectionId:r,_payload:o,metadata:o.metadata,type:o.type,label:o.label,serialization:o.serialization,reliable:o.reliable}),this._addConnection(i,t),this.emit("connection",t));var a=this._getMessages(r);a.forEach(function(e){t.handleMessage(e)});break;default:if(!o)return void d.debug("You receive a malformed message from "+i+" of type "+n);d.debug("Receive message:",n),t=this.getConnection(i),t&&t.pc?t.handleMessage(e):o.connectionId?this._storeMessage(o.connectionId,e):d.warn("You receive an unrecognized message:",e)}},c.prototype._storeMessage=function(e,t){this._lostMessages[e]||(this._lostMessages[e]=[]),this._lostMessages[e].push(t)},c.prototype._getMessages=function(e){var t=this._lostMessages[e];return t?(delete this._lostMessages[e],t):[]},c.prototype.connect=function(e,t){if(this.disconnected)return void d.warn("You cannot connect to a new Peer because you called .disconnect() on this peer.You can create a new peer to reconnect, or call reconnect on this peer if you believe its ID still be available");
var n=new s(e,this,t);return this._addConnection(e,n),n},c.prototype._addConnection=function(e,t){this.connections[t.type]||(this.connections[t.type]={}),this.connections.all[e]=t,this.connections[t.type][e]=t},c.prototype.getConnection=function(e){return this.connections.all[e]},c.prototype.emitError=function(e,t){d.error("Error:",t),"string"==typeof t&&(t=new Error(t)),t.type=e,this.emit("error",t)},c.prototype.destroy=function(){this.destroyed||(this.socket.close(),this._cleanup(),this.removeAllListeners(),this.destroyed=!0,this.disconnected=!0,this.open=!1)},c.prototype._delayedAbort=function(e,t){var n=this;r(function(){n._abort(e,t)})},c.prototype._abort=function(e,t){this.disconnect(),this.emitError(e,t)},c.prototype._cleanup=function(){for(var e in this.connections.all){var t=this.connections.all[e];t&&(delete this.connections.all[e],delete this.connections[t.type][e],t.destroy())}this._lostMessages={}},c.prototype.disconnect=function(){d.debug("Disconnect socket connection and close all data connection.");var e=this;r(function(){e.disconnected||(e.disconnected=!0,e.open=!1,e.socket&&e.socket.connected&&(d.debug("Disconnect socket",e.socket),e.socket.disconnect()),e._cleanup(),e.emit("disconnected",e.id),e.id=null)})},c.prototype.reconnect=function(){if(this.disconnected&&!this.destroyed)d.debug("Attempting reconnection to server with ID",this._lastServerId),this.socket.connect();else{if(this.destroyed)throw new Error("This peer cannot reconnect to the server. It has already been destroyed.");if(this.disconnected||this.open)throw new Error("Peer "+this.id+" cannot reconnect because it is not disconnected from ther server");d.error("In a hurry?We're still trying to make initial connection!")}},c.prototype._cleanupPeer=function(e){var t=this.connections.all[e];t?(delete this.connections.all[e],delete this.connections[t.type][e],t.destroy()):d.warn("peer not exist",this.connections)},c}angular.module("screenPeer").service("ScreenPeer",e)}(),!function(){"use strict";angular.module("screenPeer",[])}(),function(){"use strict";angular.module("screenPeer",[])}(),!function(){"use strict";function e(e){return function(t,n,o){var i=t?"wss://":"ws://",s=i+n+":"+o;return e(s)}}angular.module("screenPeer").factory("Socket",e)}(),function(){"use strict";function e(e){return function(t,n,o){var i=t?"wss://":"ws://",s=i+n+":"+o;return e(s)}}angular.module("screenPeer").factory("Socket",e)}(),!function(){"use strict";function e(e,t,n){var o=this;this.defaultConfig={iceServers:[{url:"stun:stun.l.google.com:19302"}]},this.dataCount=1,this.noop=function(){},this.chunkedBrowsers={Chrome:1},this.chunkedMTU=16300,this.browser=function(){return t.mozRTCPeerConnection?"Firefox":t.webkitRTCPeerConnection?"Chrome":t.RTCPeerConnection?"Supported":"Unsupported"}(),this.supports=function(){if("undefined"==typeof e)return{};var i,s,r=!0,a=!0,c=!1,d=!1,u=!!t.webkitRTCPeerConnection;try{i=new e(o.defaultConfig,{optional:[{RtpDataChannels:!0}]})}catch(h){r=!1,a=!1}if(r)try{s=i.createDataChannel("_PEERJSTEST")}catch(h){r=!1}if(r){try{s.binaryType="blob",c=!0}catch(h){}var p=new e(o.defaultConfig,{});try{var l=p.createDataChannel("_PEERJSRELIABLETEST",{});d=l.reliable}catch(h){}p.close()}if(a&&(a=!!i.addStream),!u&&r){var f=new e(o.defaultConfig,{optional:[{RtpDataChannels:!0}]});f.onnegotiationneeded=function(){u=!0,peerUtil&&peerUtil.supports&&(peerUtil.supports.onnegotiationneeded=!0)},f.createDataChannel("_PEERJSNEGOTIATIONTEST"),n(function(){f.close()},1e3)}return i&&i.close(),{audioVideo:a,data:r,binaryBlob:c,sctp:d,onnegotiationneeded:u}}(),this.validateId=function(e){return!e||/^[A-Za-z0-9]+(?:[ _-][A-Za-z0-9]+)*$/.exec(e)},this.inherits=function(e,t){e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}})},this.extend=function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);return e},this.chunkString=function(e){for(var t=[],n=e.length,o=0,i=0,s=Math.ceil(n/peerUtil.chunkedMTU);n>o;){var r=Math.min(n,o+peerUtil.chunkedMTU),a=e.slice(o,r),c={__peerData:this.dataCount,n:i,data:a,total:s};t.push(c),o=r,i+=1}return this.dataCount+=1,t},this.chunk=function(e){for(var t=[],n=e.size,o=0,i=0,s=Math.ceil(n/peerUtil.chunkedMTU);n>o;){var r=Math.min(n,o+peerUtil.chunkedMTU),a=e.slice(o,r),c={__peerData:dataCount,n:i,data:a,total:s};t.push(c),o=r,i+=1}return dataCount+=1,t},this.blobToArrayBuffer=function(e,n){var o=new t.FileReader;o.onload=function(e){n(e.target.result)},o.readAsBinaryString(e)},this.binaryStringToArrayBuffer=function(e){for(var t=new Uint8Array(e.length),n=0;n<e.length;n++)t[n]=255&e.charCodeAt(n);return t.buffer},this.randomToken=function(){return Math.random().toString(36).substr(2)},this.isSecure=function(){return"https"===t.location.protocol}}angular.module("screenPeer").service("screenPeerUtil",e)}(),function(){"use strict";function e(e,t,n){var o=this;this.defaultConfig={iceServers:[{url:"stun:stun.l.google.com:19302"}]},this.dataCount=1,this.noop=function(){},this.chunkedBrowsers={Chrome:1},this.chunkedMTU=16300,this.browser=function(){return t.mozRTCPeerConnection?"Firefox":t.webkitRTCPeerConnection?"Chrome":t.RTCPeerConnection?"Supported":"Unsupported"}(),this.supports=function(){if("undefined"==typeof e)return{};var i,s,r=!0,a=!0,c=!1,d=!1,u=!!t.webkitRTCPeerConnection;try{i=new e(o.defaultConfig,{optional:[{RtpDataChannels:!0}]})}catch(h){r=!1,a=!1}if(r)try{s=i.createDataChannel("_PEERJSTEST")}catch(h){r=!1}if(r){try{s.binaryType="blob",c=!0}catch(h){}var p=new e(o.defaultConfig,{});try{var l=p.createDataChannel("_PEERJSRELIABLETEST",{});d=l.reliable}catch(h){}p.close()}if(a&&(a=!!i.addStream),!u&&r){var f=new e(o.defaultConfig,{optional:[{RtpDataChannels:!0}]});f.onnegotiationneeded=function(){u=!0,peerUtil&&peerUtil.supports&&(peerUtil.supports.onnegotiationneeded=!0)},f.createDataChannel("_PEERJSNEGOTIATIONTEST"),n(function(){f.close()},1e3)}return i&&i.close(),{audioVideo:a,data:r,binaryBlob:c,sctp:d,onnegotiationneeded:u}}(),this.validateId=function(e){return!e||/^[A-Za-z0-9]+(?:[ _-][A-Za-z0-9]+)*$/.exec(e)},this.inherits=function(e,t){e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}})},this.extend=function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);return e},this.chunkString=function(e){for(var t=[],n=e.length,o=0,i=0,s=Math.ceil(n/peerUtil.chunkedMTU);n>o;){var r=Math.min(n,o+peerUtil.chunkedMTU),a=e.slice(o,r),c={__peerData:this.dataCount,n:i,data:a,total:s};t.push(c),o=r,i+=1}return this.dataCount+=1,t},this.chunk=function(e){for(var t=[],n=e.size,o=0,i=0,s=Math.ceil(n/peerUtil.chunkedMTU);n>o;){var r=Math.min(n,o+peerUtil.chunkedMTU),a=e.slice(o,r),c={__peerData:dataCount,n:i,data:a,total:s};t.push(c),o=r,i+=1}return dataCount+=1,t},this.blobToArrayBuffer=function(e,n){var o=new t.FileReader;o.onload=function(e){n(e.target.result)},o.readAsBinaryString(e)},this.binaryStringToArrayBuffer=function(e){for(var t=new Uint8Array(e.length),n=0;n<e.length;n++)t[n]=255&e.charCodeAt(n);return t.buffer},this.randomToken=function(){return Math.random().toString(36).substr(2)},this.isSecure=function(){return"https"===t.location.protocol}}angular.module("screenPeer").service("screenPeerUtil",e)}();